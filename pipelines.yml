resources:
  - name: mymvn_project
    type: GitRepo
    configuration:
      gitProvider: bindu_github
      path: bindushree16/project-examples
    branches:
      include: maven
      
  - name: mvn_Buildinfo
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildNumber: 1
      buildName: mvntest
      
  - name: maven_infooo
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildName: maven_scan
      buildNumber: 2
      
  - name: mavenbuild_promoted
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildName: maven_promote
      buildNumber: 3
      
  - name: unsigned_mavenbuild_release
    type: ReleaseBundle
    configuration:
      sourceDistribution: dist
      name: mvn_release_bundle_unsigned
      version: v0.2.3
      isSigned: false
  
  - name: signed_mavenbuild_release
    type: ReleaseBundle
    configuration:
      sourceDistribution: dist
      name: mvn_release_bundle_signed
      version: v1.0.0
      isSigned: true
  
  - name: mavenbuild_distribution_rule
    type: DistributionRule
    configuration:
      sourceDistribution: dist
      cityName: "*"
      serviceName: "*"
      siteName: "*"
      countryCodes:
#         - GB #edge node -> intend EU
        - IN 


pipelines:
  - name: pipeline_mvn
    steps:
      - name: mvnBuild_1
        type: MvnBuild
        configuration:
          nodePool: ubuntu16
          sourceLocation: ./artifactory-maven-plugin-example
          mvnCommand: clean install -f ./pom.xml
          configFileLocation: .
          configFileName: mvn-art-config
          inputResources:
            - name: mymvn_project
          integrations:
            - name: art
#           runtime:            
#             type: image
#             image:
#               custom:
#                 name: drydock/u16java
#                 tag: master
#                 options: ""
          runtime:            
            type: image
            image:
              auto:
                language: java
                versions:
                  - openjdk8
        execution:
          onStart:
#             - apt install default-jdk
#             - pushd /tmp 
#             - wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz
#             - tar xzvf apache-maven-3.6.1-bin.tar.gz
#             - 'export PATH=$PATH:/tmp/apache-maven-3.6.1/bin'
#             - export M2_HOME=/tmp/apache-maven-3.6.1/
#             - popd
            - java -version
            - mvn --version
          onSuccess:
            - send_notifications bindu_slack
            
      - name: mvnpublish
        type: PublishBuildInfo
        configuration:
          nodePool: ubuntu16
          inputSteps:
            - name: mvnBuild_1
          outputResources:
            - name: mvn_Buildinfo
        execution:
          onSuccess:
            - send_notifications bindu_slack 
      
      - name: mvn_build_scan
        type: XrayScan
        configuration:
          nodePool: ubuntu16
          inputResources:
            - name: mvn_Buildinfo 
          outputResources:
            - name: maven_infooo
                
      - name: mvn_build_promote
        type: PromoteBuild
        configuration:
          nodePool: ubuntu16
          targetRepository: test-maven-local # required 
          includeDependencies: true    # default false
          status: "promote success" # for mvn_build_promoted" # optional
          comment: "maven build should be promoted from varsha-local. maven build should be promoted from varsha-local. maven build should be promoted from varsha-local. maven build should be promoted from varsha-local" # for mvn_build_promoted" # optional
          copy: true #optional - no need to have delete access it wont delete from base repo just moves copy to target repo
          inputResources:
            - name: mvn_Buildinfo #required
          outputResources:
            - name: mavenbuild_promoted
            
      - name: mvn_release_bundle_unsigned
        type: CreateReleaseBundle
        configuration:
          nodePool: ubuntu16
          dryRun: false 
          description: "This is to test mvn build"
          releaseBundleName: mvn_release_bundle_vijay
          releaseBundleVersion: v0.11.0
          sign: false
          inputResources:
            - name: mavenbuild_promoted
          outputResources:
            - name: unsigned_mavenbuild_release
            
      - name: signed_release_mvn_bundle
        type: SignReleaseBundle
        configuration:
          nodePool: ubuntu16
          inputResources:
            - name: unsigned_mavenbuild_release
          outputResources:
            - name: signed_mavenbuild_release
            
      - name: mvn_distribute_signed_release
        type: DistributeReleaseBundle
        configuration:
          nodePool: ubuntu16
          inputResources:
            - name: signed_mavenbuild_release
            - name: mavenbuild_distribution_rule     
            
            
